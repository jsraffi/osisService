@model OsisModel.Models.StudentViewModel

@{
    ViewBag.Title = "Create";
}

<h1>Add student to school</h1>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
@Html.ValidationSummary(true)

    <div class="form-horizontal">
      
      <div class="form-group" >
        @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
       </div> 
    

    <div class="form-group">
        @Html.LabelFor(model => model.NickName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NickName)
            @Html.ValidationMessageFor(model => model.NickName)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sex, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sex)
            @Html.ValidationMessageFor(model => model.Sex)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DOB, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DOB)
            @Html.ValidationMessageFor(model => model.DOB)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FathersName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FathersName)
            @Html.ValidationMessageFor(model => model.FathersName)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MothersName, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MothersName)
            @Html.ValidationMessageFor(model => model.MothersName)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FathersOccupation, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FathersOccupation)
            @Html.ValidationMessageFor(model => model.FathersOccupation)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MothersOccupation, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MothersOccupation)
            @Html.ValidationMessageFor(model => model.MothersOccupation)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MothersPhone, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MothersPhone)
            @Html.ValidationMessageFor(model => model.MothersPhone)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FathersPhone, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FathersPhone)
            @Html.ValidationMessageFor(model => model.FathersPhone)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FathersQualification, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FathersQualification)
            @Html.ValidationMessageFor(model => model.FathersQualification)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MothersQualifiication, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MothersQualifiication)
            @Html.ValidationMessageFor(model => model.MothersQualifiication)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.MotherTongue, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MotherTongue)
            @Html.ValidationMessageFor(model => model.MotherTongue)
        </div>
    </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Address_Address1, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address_Address1)
                @Html.ValidationMessageFor(model => model.Address_Address1)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address_Address2, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address_Address2)
                @Html.ValidationMessageFor(model => model.Address_Address2)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address_City, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address_City)
                @Html.ValidationMessageFor(model => model.Address_City)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address_Pincode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address_Pincode)
                @Html.ValidationMessageFor(model => model.Address_Pincode)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone)
                @Html.ValidationMessageFor(model => model.Phone)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.website, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.website)
                @Html.ValidationMessageFor(model => model.website)
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.IdentificationMarks, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdentificationMarks)
                @Html.ValidationMessageFor(model => model.IdentificationMarks)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KnowMedicalCondition, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.KnowMedicalCondition)
                @Html.ValidationMessageFor(model => model.KnowMedicalCondition)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SpecialTalents, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SpecialTalents)
                @Html.ValidationMessageFor(model => model.SpecialTalents)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReasonForOlivekids, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReasonForOlivekids)
                @Html.ValidationMessageFor(model => model.ReasonForOlivekids)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlayschoolExperience, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlayschoolExperience)
                @Html.ValidationMessageFor(model => model.PlayschoolExperience)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOfJoining, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOfJoining, "ShortDateTime")
                @Html.ValidationMessageFor(model => model.DateOfJoining)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CenterCode, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CenterCode)
                @Html.ValidationMessageFor(model => model.CenterCode)
            </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.AdmissionFee, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdmissionFee)
                @Html.ValidationMessageFor(model => model.AdmissionFee)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalCourseFee, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalCourseFee)
                @Html.ValidationMessageFor(model => model.TotalCourseFee)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TermFee, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TermFee)
                @Html.ValidationMessageFor(model => model.TermFee)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Height, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Height)
                @Html.ValidationMessageFor(model => model.Height)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight)
                @Html.ValidationMessageFor(model => model.Weight)
            </div>
        </div>
        <div class="row" style="margin-bottom:25px;">
            <table id="studentcurrentyear" >
                <thead>
                    <tr>
                        <td width="25%" style="border:solid 1px black">School Name</td>
                        <td width="25%" style="border:solid 1px black">Academic Year</td>
                        <td width="25%" style="border:solid 1px black">Class Name</td>
                        <td width="25%" style="border:solid 1px black">Active Year</td>
                    </tr>
                </thead>
                <tbody>
                        
                  @for(var i=0;i < Model.StudentCurrentYear.Count;i++) 
                    {
                        
                    <tr>
                        
                        <td width="25%" style="border:solid 1px black">
                           
                            @Html.DropDownList("SchoolRefID", "Please select a schoool")
                            @Html.ValidationMessageFor(model => model.StudentCurrentYear[i].SchoolRefID)
                        </td>
                        <td width="25%" style="border:solid 1px black">
                            @Html.DropDownList("AcademicYearRefID", null, "Please select a AcademicYear")
                            @Html.ValidationMessageFor(model => model.StudentCurrentYear[i].AcademicYearRefID)
                        </td>
                        <td width="25%" style="border:solid 1px black">
                            @Html.DropDownList("ClassRefID", null,"Please select a class")
                            @Html.ValidationMessageFor(model => model.StudentCurrentYear[i].ClassRefID)
                        </td>
                        <td width="25%" style="border:solid 1px black">
                           @Html.CheckBoxFor(x => Model.StudentCurrentYear[i].Active)
                            @Html.ValidationMessageFor(model => model.StudentCurrentYear[i].Active)
                        </td>
                    
                    </tr>
                    }
                </tbody>


            </table>

        </div>
        
        
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Create" class="btn btn-default"  style="margin-left:175px" />
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/globalize")

    <script type="text/javascript">
        

        $("select#SchoolRefID").bind('change', function () {
            var SchoolID = $("select#SchoolRefID option:selected").val();
            if (SchoolID == "" || SchoolID == 0) {
                $("select#ClassRefID").empty();
                $("select#AcademicYearRefID").empty();
            }
            else
            {
                $.getJSON('@Url.Action("GetClassBySchoolID")', { id: SchoolID }, function (data) {
                    $("select#ClassRefID").empty();
                    $.each(data, function (i, c) {
                        $('select#ClassRefID').append('<option value="' + c.Value + '">' + c.Text + '</option>');
                    });
                    $("select#ClassRefID option:first").attr('selected', 'selected');

                });

                $.getJSON('@Url.Action("GetAcademicYearBySchoolID")', { id: SchoolID }, function (data) {
                    $("select#AcademicYearRefID").empty();
                    $.each(data, function (i, c) {
                        $('select#AcademicYearRefID').append('<option value="' + c.Value + '">' + c.Text + '</option>');
                    });
                    $("select#AcademicYearRefID option:first").attr('selected', 'selected');

                });
            }
        });
    </script>

}
