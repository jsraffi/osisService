@model OsisModel.Models.StudentViewModel

@section CustomStyles {
    @Styles.Render("~/Content/datepickercss")
}

@{
    ViewBag.Title = "Create";
}

<h1 class="h1padbot">Add student to school</h1>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="formpadleft form-inline">
      
        <div class="row rowstudent">
            <table>
                <tr>
                    <td>
                    @Html.ValidationMessageFor(model => model.Name)<br />
                    @Html.TextBoxFor(model => model.Name, new { @placeholder = "Student Name", @class = "text-box-student" , @title="Please enter a student name"})
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.NickName)<br />
                       @Html.TextBoxFor(model => model.NickName, new { @placeholder = "Nick Name", @class = "text-box-student" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.Sex)<br />
                        @Html.DropDownListFor( model => model.Sex, new List<SelectListItem>{
                                new SelectListItem{ Text="Male", Value="M"},
                                new SelectListItem{ Text="Female", Value="F"}
                            }, "Please select a gender", new { @class="text-box-student"}
                                )
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.DOB)<br />
                        @Html.TextBoxFor(model => model.DOB, new { @placeholder = "Date of birth", @value = "", @class = "text-box-student" })
                    </td>
                </tr>
            </table>
        </div>
        <div class="rowbetweenspace"></div>
        <div class="row rowstudent">

            <table>
                <tr>
                    <td>
                        @Html.ValidationMessageFor(model => model.FathersName)
                        <br />
                        @Html.TextBoxFor(model => model.FathersName, new { @placeholder = "Father's Name", @class = "text-box-student" })
                    </td>

                    <td>
                        @Html.ValidationMessageFor(model => model.MothersName)
                        <br />
                        @Html.TextBoxFor(model => model.MothersName, new { @placeholder = "Mother's Name", @class = "text-box-student" })
                    </td>

                    <td>
                        @Html.ValidationMessageFor(model => model.FathersOccupation)
                        <br />
                        @Html.TextBoxFor(model => model.FathersOccupation, new { @placeholder = "Father's Occupation", @class = "text-box-student" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.MothersOccupation)
                        <br />
                        @Html.TextBoxFor(model => model.MothersOccupation, new { @placeholder = "Mother's Occupation", @class = "text-box-student" })
                    </td>
                </tr>
            </table>
    </div>
            
        <div class="rowbetweenspace"></div>
        <div class="row rowstudent">

            <table>
                <tr>
                    <td>
                        @Html.ValidationMessageFor(model => model.MotherTongue)
                        <br />
                        @Html.TextBoxFor(model => model.MotherTongue, new { @placeholder = "Mother tongue", @class = "text-box-student" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.Address_Address1)
                        <br />
                        @Html.TextBoxFor(model => model.Address_Address1, new { @placeholder = "Address1", @class = "text-box-student" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.Address_Address2)
                        <br />
                        @Html.TextBoxFor(model => model.Address_Address2, new { @placeholder = "Address2", @class = "text-box-student" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.Address_City)
                        <br />
                        @Html.TextBoxFor(model => model.Address_City, new { @placeholder = "City", @class = "text-box-student" })
                    </td>
                </tr>
            </table>
        </div>
        <div class="rowbetweenspace"></div>
        <div class="row rowstudent">
            <table>
                <tr>
                    <td>
                        @Html.ValidationMessageFor(model => model.Address_Pincode)
                        <br />
                        @Html.TextBoxFor(model => model.Address_Pincode, new { @placeholder = "Pincode", @class = "text-box-student" })
                    </td>

                    <td>
                        @Html.ValidationMessageFor(model => model.Phone)
                        <br />
                        @Html.TextBoxFor(model => model.Phone, new { @placeholder = "phone", @class = "text-box-student" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.Email)
                        <br />
                        @Html.TextBoxFor(model => model.Email, new { @placeholder = "Email", @class = "text-box-student" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.website)
                        <br />
                        @Html.TextBoxFor(model => model.website, new { @placeholder = "Website", @class = "text-box-student" })
                    </td>
                </tr>
</table>
</div>
        <div class="rowbetweenspace"></div>
        <div class="row rowstudent">

            <table>
                <tr>
                    <td>
                        @Html.ValidationMessageFor(model => model.IdentificationMarks)
                        <br />
                        @Html.TextBoxFor(model => model.IdentificationMarks, new { @placeholder = "Identification marks", @class = "text-box-student" })
                    </td>

                    <td>
                        >
                        @Html.ValidationMessageFor(model => model.KnowMedicalCondition)
                        <br />
                        @Html.TextBoxFor(model => model.KnowMedicalCondition, new { @placeholder = "Known medical condition", @class = "text-box-student" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.SpecialTalents)
                        <br />
                        @Html.TextBoxFor(model => model.SpecialTalents, new { @placeholder = "Special talents", @class = "text-box-student" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.ReasonForOlivekids)
                        <br />
                        @Html.TextBoxFor(model => model.ReasonForOlivekids, new { @placeholder = "Reason for choosing olveikids", @class = "text-box-student" })
                    </td>
                </tr>
            </table>

</div>
    
        <div class="rowbetweenspace"></div>
        <div class="row rowstudent">
            <table>
                <tr>
                    <td>
                        @Html.ValidationMessageFor(model => model.PlayschoolExperience)
                        <br />
                        @Html.TextBoxFor(model => model.PlayschoolExperience, new { @placeholder = "Playschool experience", @class = "text-box-student" })
                    </td>

                    <td>
                        @Html.ValidationMessageFor(model => model.DateOfJoining)
                        <br />
                        @Html.TextBoxFor(model => model.DateOfJoining, new { @placeholder = "Date of joining", @class = "text-box-student" })
                    </td>
                    <td>

                        @Html.ValidationMessageFor(model => model.CenterCode)
                        <br />
                        @Html.TextBoxFor(model => model.CenterCode, new { @placeholder = "Center Code", @class = "text-box-student" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.AdmissionFee)
                        <br />
                        @Html.TextBoxFor(model => model.AdmissionFee, new { @placeholder = "Admission Fee", @class = "text-box-student", Value = "" })
                    </td>
                </tr>
            </table>

        </div>
        
        <div class="rowbetweenspace"></div>
        <div class="row rowstudent">
            <table>
                <tr>
                    <td>
                        @Html.ValidationMessageFor(model => model.PlayschoolExperience)
                        <br />
                        @Html.TextBoxFor(model => model.TotalCourseFee, new { @placeholder = "Total course fee", @class = "text-box-student" })
                    </td>

                    <td>
                        @Html.ValidationMessageFor(model => model.DateOfJoining)
                        <br />
                        @Html.TextBoxFor(model => model.TermFee, new { @placeholder = "Term fee", @class = "text-box-student" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.CenterCode)
                        <br />
                        @Html.TextBoxFor(model => model.Height, new { @placeholder = "Heigth", @class = "text-box-student" })
                    </td>
                    <td>
                        @Html.ValidationMessageFor(model => model.Weight)
                        <br />
                        @Html.TextBoxFor(model => model.Weight, new { @placeholder = "Weight", @class = "text-box-student" })
                    </td>
                </tr>
            </table>
        </div>

        <div class="row" style="margin-bottom:25px;">
            <table id="studentcurrentyear" >
                <thead>
                    <tr>
                        <td width="25%" style="border:solid 1px black">School Name</td>
                        <td width="25%" style="border:solid 1px black">Academic Year</td>
                        <td width="25%" style="border:solid 1px black">Class Name</td>
                        <td width="25%" style="border:solid 1px black">Active Year</td>
                    </tr>
                </thead>
                <tbody>
                        
                  @for (var i=0;i < Model.StudentCurrentYear.Count;i++) 
                    {
                        
                    <tr>
                        
                        <td width="25%" style="border:solid 1px black">
                           
                            @Html.DropDownList("SchoolRefID", "Please select a schoool")
                            @Html.ValidationMessageFor(model => model.StudentCurrentYear[i].SchoolRefID)
                        </td>
                        <td width="25%" style="border:solid 1px black">
                            @Html.DropDownList("AcademicYearRefID", null, "Please select a AcademicYear")
                            @Html.ValidationMessageFor(model => model.StudentCurrentYear[i].AcademicYearRefID)
                        </td>
                        <td width="25%" style="border:solid 1px black">
                            @Html.DropDownList("ClassRefID", null,"Please select a class")
                            @Html.ValidationMessageFor(model => model.StudentCurrentYear[i].ClassRefID)
                        </td>
                        <td width="25%" style="border:solid 1px black">
                           @Html.CheckBoxFor(x => Model.StudentCurrentYear[i].Active)
                            @Html.ValidationMessageFor(model => model.StudentCurrentYear[i].Active)
                        </td>
                    
                    </tr>
                    }
                </tbody>


            </table>

        </div>
        
        
        <div class="form-group">
            <div class="col-md-10">
                <input type="submit" value="Create" class="btn btn-default buttonlayout" />
            </div>
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/globalize")
    @Scripts.Render("~/bundles/datepicker")
    <script type="text/javascript">

        $(document).ready(function () {

            $('#DOB').datepicker({
                format: "dd/mm/yyyy",
                autoclose: true,
                orientation: "top auto",
                todayHighlight: true
                
            });

            $('#DateOfJoining').datepicker({
                format: "dd/mm/yyyy",
                autoclose: true,
                orientation: "top auto",
                todayHighlight: true

            });
        });
        

        $("select#SchoolRefID").bind('change', function () {
            var SchoolID = $("select#SchoolRefID option:selected").val();
            if (SchoolID == "" || SchoolID == 0) {
                $("select#ClassRefID").empty();
                $("select#AcademicYearRefID").empty();
            }
            else
            {
                $.getJSON('@Url.Action("GetClassBySchoolID")', { id: SchoolID }, function (data) {
                    $("select#ClassRefID").empty();
                    $.each(data, function (i, c) {
                        $('select#ClassRefID').append('<option value="' + c.Value + '">' + c.Text + '</option>');
                    });
                    $("select#ClassRefID option:first").attr('selected', 'selected');

                });

                $.getJSON('@Url.Action("GetAcademicYearBySchoolID")', { id: SchoolID }, function (data) {
                    $("select#AcademicYearRefID").empty();
                    $.each(data, function (i, c) {
                        $('select#AcademicYearRefID').append('<option value="' + c.Value + '">' + c.Text + '</option>');
                    });
                    $("select#AcademicYearRefID option:first").attr('selected', 'selected');

                });
            }
        });
    </script>

}
