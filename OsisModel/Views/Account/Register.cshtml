@model OsisModel.Models.RegisterViewModel

@{
    ViewBag.Title = "Register";
}

<h1 class="h1padbot">Create a new user for a school</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    

    <div class="form-horizontal formpadleft">
    @Html.ValidationSummary(true)
    
    <div class="form-group">
            @Html.LabelFor(model => model.SchoolID, "School Name", new { @class = "controlLabel col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SchoolID","Please select a school")
                @Html.ValidationMessageFor(model => model.SchoolID)
            </div>
    </div>
    <div class="form-group">
            @Html.LabelFor(model => model.AcademicYearID, "Academic Year", new { @class = "controlLabel col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AcademicYearID", "Please select an academic year")
                @Html.ValidationMessageFor(model => model.AcademicYearID)
            </div>
    </div>
    
        <div class="form-group">
        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 controlLabel" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.UserName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserName)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "col-md-2 controlLabel" })
        <div class="col-md-5">
            @Html.EditorFor(m => m.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>
    </div>
    
    <div class="form-group">
        @Html.LabelFor(m => m.LastName, new { @class = "col-md-2 controlLabel" })
        <div class="col-md-5">
            @Html.EditorFor(m => m.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LastName)
        </div>
    </div>
  
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 controlLabel" })
        <div class="col-md-5">
            @Html.EditorFor(m => m.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 controlLabel" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Password)
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 controlLabel" })
        <div class="col-md-10">
            @Html.EditorFor(m => m.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ConfirmPassword)
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-10">
            <input type="submit" class="btn btn-default buttonlayout" value="Register"/>
        </div>
    </div>


</div>
    
<div class="form-group">
    <div class="col-md-10" style="font-size:25px">
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/globalize")


<script type="text/javascript">
    $("select#SchoolID").bind('change', function () {
        var SchoolID = $("select#SchoolID option:selected").val();
        if (SchoolID == "" || SchoolID == 0) {
            $("select#AcademicYearID").empty();
        }
        else {
       
            $.getJSON('@Url.Action("GetAcademicYearBySchoolID")', { id: SchoolID }, function (data) {
                $("select#AcademicYearID").empty();
                $.each(data, function (i, c) {
                    $('select#AcademicYearID').append('<option value="' + c.Value + '">' + c.Text + '</option>');
                });
                $("select#AcademicYearID option:first").attr('selected', 'selected');

            });
        }
    });


</script>

}